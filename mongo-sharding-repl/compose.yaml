name: mongo-sharding-repl
services:

# конфигурационный сервер
  configSrv01:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv01
    restart: always
    ports:
        - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db

    command:
      [
        "--configsvr", 
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]   
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
# 1-й шард
  shard01-01:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard01-01
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard01-data01:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard01", 
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard01-02:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard01-02
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - shard01-data02:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard01", 
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard01-03:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard01-03
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - shard01-data03:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard01", 
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s      



# 2-й шард
  shard02-01:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard02-01
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard02-data01:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard02", 
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard02-02:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard02-02
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    volumes:
      - shard02-data02:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard02", 
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard02-03:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard02-03
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    volumes:
      - shard02-data03:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard02", 
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
# роутер
  router01:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: router01
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    depends_on:
      - configSrv01
    ports:
      - "27020:27020"

    command:
      [
        "mongos", 
        "--configdb", 
        "config_server/173.17.0.10:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - router01

    networks:
      app-network:
        ipv4_address: 173.17.0.6
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://router01:27020/somedb"
      MONGODB_DATABASE_NAME: "somedb"


networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard01-data01:
  shard01-data02:
  shard01-data03:
  shard02-data01:
  shard02-data02:
  shard02-data03:
